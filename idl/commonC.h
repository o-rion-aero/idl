// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p11
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// c:\opendds-3.10-win32-debug\ace_wrappers\tao\tao_idl\be\be_codegen.cpp:152

#ifndef _TAO_IDL___COMMONC_ZZBIMB_H_
#define _TAO_IDL___COMMONC_ZZBIMB_H_


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/ORB.h"
#include "tao/Basic_Types.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 2 || TAO_BETA_VERSION != 0
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO 

// TAO_IDL - Generated from
// c:\opendds-3.10-win32-debug\ace_wrappers\tao\tao_idl\be\be_type.cpp:261

struct Vector2;

typedef
  ::TAO_Fixed_Var_T<
      Vector2
    >
  Vector2_var;

typedef
  Vector2 &
  Vector2_out;

// TAO_IDL - Generated from
// c:\opendds-3.10-win32-debug\ace_wrappers\tao\tao_idl\be\be_visitor_structure\structure_ch.cpp:51

struct  Vector2
{

  // TAO_IDL - Generated from
  // c:\opendds-3.10-win32-debug\ace_wrappers\tao\tao_idl\be\be_type.cpp:307

  
  typedef Vector2_var _var_type;
  typedef Vector2_out _out_type;

  static void _tao_any_destructor (void *);
  
  ::CORBA::Double x;
  ::CORBA::Double y;
};

// TAO_IDL - Generated from
// c:\opendds-3.10-win32-debug\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:37

extern  ::CORBA::TypeCode_ptr const _tc_Vector2;

// TAO_IDL - Generated from
// c:\opendds-3.10-win32-debug\ace_wrappers\tao\tao_idl\be\be_type.cpp:261

struct Vector3;

typedef
  ::TAO_Fixed_Var_T<
      Vector3
    >
  Vector3_var;

typedef
  Vector3 &
  Vector3_out;

// TAO_IDL - Generated from
// c:\opendds-3.10-win32-debug\ace_wrappers\tao\tao_idl\be\be_visitor_structure\structure_ch.cpp:51

struct  Vector3
{

  // TAO_IDL - Generated from
  // c:\opendds-3.10-win32-debug\ace_wrappers\tao\tao_idl\be\be_type.cpp:307

  
  typedef Vector3_var _var_type;
  typedef Vector3_out _out_type;

  static void _tao_any_destructor (void *);
  
  ::CORBA::Double x;
  ::CORBA::Double y;
  ::CORBA::Double z;
};

// TAO_IDL - Generated from
// c:\opendds-3.10-win32-debug\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:37

extern  ::CORBA::TypeCode_ptr const _tc_Vector3;

// TAO_IDL - Generated from
// c:\opendds-3.10-win32-debug\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:68

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // c:\opendds-3.10-win32-debug\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::Vector2>
    : public
        Fixed_Size_Arg_Traits_T<
            ::Vector2,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\opendds-3.10-win32-debug\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::Vector3>
    : public
        Fixed_Size_Arg_Traits_T<
            ::Vector3,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\opendds-3.10-win32-debug\ace_wrappers\tao\tao_idl\be\be_visitor_traits.cpp:62

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\opendds-3.10-win32-debug\ace_wrappers\tao\tao_idl\be\be_visitor_structure\any_op_ch.cpp:45


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const Vector2 &); // copying version
 void operator<<= (::CORBA::Any &, Vector2*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Vector2 *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Vector2 *&);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\opendds-3.10-win32-debug\ace_wrappers\tao\tao_idl\be\be_visitor_structure\any_op_ch.cpp:45


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const Vector3 &); // copying version
 void operator<<= (::CORBA::Any &, Vector3*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Vector3 *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Vector3 *&);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\opendds-3.10-win32-debug\ace_wrappers\tao\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Vector2 &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Vector2 &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\opendds-3.10-win32-debug\ace_wrappers\tao\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Vector3 &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Vector3 &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\opendds-3.10-win32-debug\ace_wrappers\tao\tao_idl\be\be_codegen.cpp:1703
#if defined (__ACE_INLINE__)
#include "commonC.inl"
#endif /* defined INLINE */

#endif /* ifndef */

